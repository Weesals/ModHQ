<Application x:Class="RTS4.ModHQ.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="clr-namespace:RTS4.ModHQ.Controls"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        
        <!-- from http://msdn.microsoft.com/en-us/library/ms752094%28v=VS.85%29.aspx -->

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Grid x:Name="Border" Background="{TemplateBinding Background}">
                <Path x:Name="Arrow" Fill="#AA440000" HorizontalAlignment="Right" VerticalAlignment="Center"
                  Margin="0 0 10 0" Data="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#88FFFFFF" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#FFFFFFFF" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="#EEE" />
                    <Setter TargetName="Arrow" Property="Fill" Value="#888" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="ClearCombo" TargetType="ComboBox">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="FontSize" Value="16" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="8 8 23 8" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" 
                                Template="{StaticResource ComboBoxToggleButton}" 
                                Background="{TemplateBinding Background}"
                                Foreground="{TemplateBinding Foreground}"
                                Grid.Column="2" 
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                TextBlock.Foreground="#AA440000">
                            </ContentPresenter>
                            <!--<Rectangle Height="1" HorizontalAlignment="Stretch" VerticalAlignment="Top" Fill="#22000000" />-->
                            <Popup Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True" 
                                Focusable="False"
                                PopupAnimation="Fade">
                                <Grid Name="DropDown"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                  Background="#fff">
                                    <StackPanel IsItemsHost="True" />
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDropDownOpen" Value="True">
                                <Setter TargetName="ContentSite" Property="Opacity" Value="0.3" />
                            </Trigger>
                            <!--<Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <!--Scrollbar Thumbs-->
        <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                            <Border x:Name="Rectangle1" CornerRadius="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ScrollBars-->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="#FFAAAAAA" />
            <Setter Property="Background" Value="#EEEEEEEE" />
            <Setter Property="Width" Value="8" />
            <Setter Property="MinWidth" Value="8" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>

                            <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>
                            <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="8" />
                                <Setter Property="MinHeight" Value="8" />
                                <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="TabSparator" Color="#FFCCCCCC" />
        <SolidColorBrush x:Key="TabNerfBorder" Color="#FFf2f0e7" />
        <SolidColorBrush x:Key="TitleEdge" Color="#88BBBBBB" />
        <SolidColorBrush x:Key="TitleSelected" Color="White" />
        <SolidColorBrush x:Key="TitleForeground" Color="#DDFFFFFF" />
        <SolidColorBrush x:Key="TitleMidground" Color="#BBFFFFFF" />
        <SolidColorBrush x:Key="TitleBackground" Color="#AAFFFFFF" />
        <Style TargetType="Button">
            <Setter Property="FontSize" Value="14" />
        </Style>
        <Style x:Key="MenuButton" TargetType="Button">
            <Setter Property="BorderBrush" Value="#33000000" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Width" Value="40" />
            <Setter Property="Height" Value="40" />
        </Style>
        <Style x:Key="Text" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#BB000000" />
        </Style>
        <Style x:Key="DynamicText" TargetType="Run">
            <Setter Property="Foreground" Value="#EE000000" />
            <Setter Property="FontWeight" Value="Bold" />
        </Style>
        <Style x:Key="HeaderText" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Foreground" Value="#BB000000" />
        </Style>
        <!--<Style x:Key="ComboBoxTransparentButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>-->
        <!--<Style x:Key="{x:Type ToggleButton}" TargetType="{x:Type ToggleButton}">
            <Setter Property="Border.Background" Value="Red" />
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="BorderBrush" Value="Red" />
                    <Setter Property="BorderThickness" Value="5" />
                </Style>
            </Style.Resources>
        </Style>-->
        <!--<Style x:Key="NoBackground" TargetType="Border">
            <Setter Property="Background" Value="Transparent" />
        </Style>-->
        <!--<Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Foreground" Value="#AA000000" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Red" />
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Purple" />
                <Style x:Key="{x:Type ToggleButton}" TargetType="ToggleButton">
                    <Setter Property="Opacity" Value="0.1" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ToggleButton">
                                <TextBlock Text="{Binding}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Style.Resources>
        </Style>-->
        <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBoxBase}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border 
                              Name="Border"
                              CornerRadius="0"
                              Padding="1"
                              Background="#FFF"
                              BorderBrush="#888"
                              BorderThickness="1">
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="#EEE"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="#EEE"/>
                                <Setter Property="Foreground" Value="#888"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="False">
                                <Setter Property="Background" TargetName="Border" Value="#33FAF0E0" />
                                <Setter Property="BorderBrush" TargetName="Border" Value="#11000000" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TabControl}">
            <Setter Property="controls:TabControl.TabBackgroundBrush" Value="{StaticResource TitleBackground}" />
            <Setter Property="controls:TabControl.TabInactiveBrush" Value="{StaticResource TitleMidground}" />
            <Setter Property="controls:TabControl.TabActiveBrush" Value="{StaticResource TitleForeground}" />
            <Setter Property="controls:TabControl.TabHoverBrush" Value="{StaticResource TitleSelected}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid UseLayoutRounding="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="LeftContent" Background="{TemplateBinding controls:TabControl.TabBackgroundBrush}"
                                    BorderBrush="{StaticResource TabSparator}" BorderThickness="0 0 1 0"
                                    UseLayoutRounding="True" Grid.Row="0" Grid.Column="0">
                                <ContentControl Content="{TemplateBinding controls:TabControl.LeftContent}" />
                            </Border>
                            <TabPanel x:Name="HeaderPanel" Grid.Row="0" Grid.Column="1"
                                    Panel.ZIndex="1" Margin="0,0,0,0" IsItemsHost="True"
                                    KeyboardNavigation.TabIndex="1" Background="Transparent">
                            </TabPanel>
                            <Border x:Name="RightContent" Background="{TemplateBinding controls:TabControl.TabBackgroundBrush}"
                                    UseLayoutRounding="True" Grid.Row="0" Grid.Column="2">
                                <ContentControl Content="{TemplateBinding controls:TabControl.RightContent}" />
                            </Border>
                            <Border x:Name="Content" Grid.Row="2" Grid.ColumnSpan="3">
                                <ContentPresenter ContentSource="SelectedContent" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                                <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                                <Setter TargetName="RightContent" Property="Grid.Row" Value="2" />
                                <Setter TargetName="RightContent" Property="Grid.Column" Value="0" />
                                <Setter TargetName="Content" Property="Grid.Row" Value="0" />
                                <Setter TargetName="Content" Property="Grid.RowSpan" Value="3" />
                                <Setter TargetName="Content" Property="Grid.Column" Value="2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style x:Key="{x:Type TabItem}" TargetType="{x:Type TabItem}">
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabItem">
                                <Border x:Name="bgBorder"
                                        Background="{Binding (controls:TabControl.TabInactiveBrush), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}}"
                                        BorderBrush="{StaticResource TabSparator}" BorderThickness="0 0 1 0"
                                        Height="40" UseLayoutRounding="True">
                                    <!--<TextBlock Text="{TemplateBinding Header}" Style="{StaticResource HeaderText}" Margin="10" VerticalAlignment="Bottom" />-->
                                    <ContentPresenter x:Name="ContentSite" ContentSource="Header" RecognizesAccessKey="True" Margin="14 0 14 0" VerticalAlignment="Center">
                                        <ContentPresenter.Resources>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource HeaderText}">
                                            </Style>
                                        </ContentPresenter.Resources>
                                    </ContentPresenter>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="bgBorder" Property="Background" Value="{Binding (controls:TabControl.TabActiveBrush), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}}" />
                                        <Setter TargetName="bgBorder" Property="Margin" Value="-1 0 0 0" />
                                        <Setter TargetName="bgBorder" Property="Padding" Value="0 0 1 0" />
                                        <Setter TargetName="bgBorder" Property="BorderThickness" Value="1 0 0 0" />
                                        <Setter TargetName="bgBorder" Property="BorderBrush" Value="{StaticResource TabNerfBorder}" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True" />
                                            <Condition Property="IsSelected" Value="False" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="bgBorder" Property="Background" Value="{Binding (controls:TabControl.TabHoverBrush), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}}" />
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Style.Resources>
        </Style>

        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
        </Style>
        
    </Application.Resources>
</Application>
